html,body{
  margin: 0;
}
.tv-body{
  width: 100%;
  background: #E3EDCD;
   /* background-color: #FAF9DE; */
  display: flex;
  flex-direction: column;
  visibility: visible;
  height: 100vh
}
.tv-index{
  width: 100vw;
  background: transparent;
   /* background-color: #FAF9DE; */
  /* display: flex; flex-direction: column;*/
  position:fixed; 
  top: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  left: 0 !important;
  height: 100%
}
.tv-notify{
  width: 100%;
  background-color: green;
  position:absolute; 
  top:0; 
  text-align: center;
  animation: fadeInDown 0.5s forwards;
  animation-fill-mode: both;
  height: 5vw;
  padding: 1vw 0;
  font-size: 3vw;
    color: white;
}
.tv-wait{
    width: 100%;
    height: 100vh;
    position:fixed;
    top: 0;
    left:0;
    background-color:rgba(0,0,0, .5); pointer-events:auto;
    text-align: center;
    font-size: 2vw;
    line-height: 100vh;
}
@font-face {
  font-family: 'tv-icon';
  src: url('../iconfont/iconfont.woff2') format('woff2');
}
.tv-content{
    flex: 1;
    overflow-y: auto;
    display: grid;
    grid-template-columns: repeat(5, 20%);
}

.tv-content img{
    max-width: 100%;
    border-radius: 1vw;
    /* height: 90%; */
}
.tv-item{
    padding: 0.5vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    font-size: 1.3vw;
}

.tv-channel{
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  flex-grow:1;
  justify-content: space-around
}
.tv-tab-flex{
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  flex-grow:1;
  justify-content: space-around
}
.tv-tab-grid{
  flex: 1;
  overflow-y: auto;
  display: grid;
  grid-template-columns: repeat(6, 16.6%);
}
.tv-grid-6{
  grid-template-columns: repeat(6, 16.6%);
}
.tv-grid-4{
    grid-template-columns: repeat(4, 25%);
}
.tab-grid-item{
  white-space: normal; /* 或者 pre-wrap，根据需求选择 */
  word-break: break-all; /* 允许在任何字符之后断行 */
}
.tv-hide{
  display: none;
}
.tv-header{
/*  overflow-x: hidden;*/
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-around
}
.tv-menu{
  overflow-x: hidden;
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-around
}
.tv-btn{
   font-size: 2vw;
   margin:1vw 1vw;
   padding: 0.5vw 2vw;
   border-radius: 2vw;
   align-content: center;
    line-height: 3vw;
    vertical-align: middle;
   /* width: fit-content;*/
    white-space: normal;
    text-align: center;
    color: black;
    cursor: pointer;
  word-spacing: normal;
    max-width: 15vw;
    background-color: #5ca9e8;
 /* background-color: #5ca9e8;*/
  font-family: "tv-icon" !important;
}
.tv-btn-vw{
  padding: 0.5vw 1vw;
  font-size: 2.5vw;
  margin: 0.5vw 0.3vw; 
  border-radius: 2vw;
}
.tv-font-bold{
  font-weight: bold;
}
.tv-btn-choose{
  background-color: #16baaa;
  color: white;
}
.tv-bg-yellow{
  background-color:#E3EDCD;
}
.tv-bg-3{
  background-color:#333333;
}
.tv-front{
  font-size: 2vw;
}
.tv-btn-warm{
  background-color: #ffb800;
}

.tv-focus {
    border: 2px solid blue; /*这里就是获取焦点的实现原理了， #CCE8CF; Focus.js会给获取焦点的元素添加一个名字叫做 focus 的class类*/
    background-color :#16baaa;
    color: white;
    img{
        width: 110%;
    }
}
@keyframes fadeInDown {
  0% {
      opacity: 0;
      -webkit-transform: translate3d(0, -100%, 0);
      transform: translate3d(0, -100%, 0);
  }
  100% {
      opacity: 1;
      -webkit-transform: none;
      transform: none;
  }
}

@keyframes scaleDraw {
 
    /*定义关键帧、scaleDrew是需要绑定到选择器的关键帧名称*/
    0% {
      transform: scale(1);
      /*开始为原始大小*/
    }
   
    25% {
      transform: scale(1.1);
      /*放大1.1倍*/
    }
   
    50% {
      transform: scale(1);
    }
   
    75% {
      transform: scale(1.1);
    }
}